About
-----

- Most of all about haskell how to elegentaly bla bla


Exercises
---------

All answers to this questions can be found out by either executing/transforming
code or by looking at the source code of this project.

- Focus on Loop, mix the order so that not 5 of a category in a row,
  only allow the features to use for writing code when transform to strict
  was done for that feature
    - ~ 5 write some code (euler, gti etc.)
    - ~ 2 guess some code
    - ~ 10 transform to strict (IF, arith)
        - IF a && b then...
        - IF a || b then...
        - arithemtic expressions like x0 := x1 + x2
        - Loop aexp DO ...
- Focus on while
    - Give an example of a while program that cannot be transformed to loop.
    - ~ 2 write some code
    - ~ 1 guess some code
- Focus on goto
    - ~ 2 write some code
    - ~ 1 guess some code (gti)
    - how can to transform "IF xy THEN HALT END" to strict?
    - this question about relabeling
- Alle drei susammen
    - transform loop loop to while/goto
    - how does the general transformation from while to goto work?
    - how does the general transformation from goto to while work?
    - Bonus: which of the languages are turing-complete? Proof in each case wether
      it is or not.

1. What is the general algorithm for correctly altering the labels when 
   transforming an extended Goto program to the strict version?

   Try your algorithm on this code:
       
       - TODO: put this code with a special case here (see tests but simpler)

   To test if your transformation was correct simply compare the output of the
   given code with the transformed code.
